import java.util.ArrayList;
import java.util.List;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Scanner;
import java.io.IOException;

public class ExStart002 {
	public static void main(String[] args) throws IOException{
		Scanner sc = new Scanner(System.in);
		System.out.println("찾을 문자 1~3개 입력하시오.(공백으로 구분)");
		//-- 찾을 문자 공백으로 구분해서 배열에 저장
		String input = sc.nextLine();
		input = input.trim(); 			//-- 문자열 양쪽의 공백을 제거합니다.
		input = input.replaceAll("\\s+", " ");	//-- 문자 사이의 공백이 여러개일 경우 1개로 변경합니다.
		String inputArray[] = input.split(" ");	//-- 공백을 기준으로 배열에 담습니다.
		//-- 공백만 입력되는 경우 실행 되지 않습니다.
		
		
			int count = 0;										// 찾은 개수를 담을 변수
			int totalCount[] = new int[inputArray.length];		// 단어 별 찾은 총 개수를 담을 배열
			String rowTemp = "";								// 찾은 단어가 몇번 째 줄의 위치하고 있는지 담기위한 변수
			ArrayList<String> rowArray = new ArrayList<>();		// 단어 별 찾은 단어가 몇번 째 줄의 위치하고 있는지 확인하기 위한 배열
																// (배열의 길이를 미리 정할 수 없기 때문에 String 배열을 사용하지 않았습니다.)
			//-- 파일 읽어오기
			List<String> file = Files.readAllLines(Paths.get("C:\\Users\\user\\Desktop\\cyw\\과제\\과제2\\102CTL001.txt"), Charset.forName("UTF-8"));		
			
			String ck = file.get(0);
			System.out.println("여기{{"+ck);
			
			
			//-- 찾을 단어만큼 반복하기 위한 반복문 
			for (int k = 0; k < inputArray.length; k++) {
				String text = inputArray[k].toLowerCase();					//-- 찾을 단어를 담을 변수
				count = 0;													//-- 몇개 찾았는지 저장하기위한 변수를 초기화
				//-- 파일의 줄 수 만큼 반복하기 위한 반복문
				for (int m = 0; m < file.size(); m++) {
					boolean rowCheck = true;											// 몇번 째 줄인지 1번만 담기위해 선언했습니다.
					//-- 주어진 줄에서 단어와 일치 여부 반복문										
					for (int i = 0; i <= file.get(m).length()-text.length(); i++) {		//-- 앞글자 기준 최대 확인 반복 횟수 설정
																						//   ex) 5글자 - 3글자는 3번째까지만 비교 해주면 되기 때문입니다.
						boolean check = true;											//-- 2번째 반복문이 단어가 일치해서 빠져나온건지
																						//   반복 횟수가 끝나서 빠져나온건지 체크 해주기위한 변수															
						//-- 찾는 글자의 길이만큼 반복하기 위한 반복문
						for (int j = 0; j < text.length(); j++)							
						{
							if (file.get(m).toLowerCase().charAt(i+j) != text.charAt(j))//-- 찾는 글자랑 다른 경우 반복문 빠져 나가도록 합니다.
							{
								check = false;
								break;
							}
						}
						//-- 단어를 찾은 경우
						if (check) {
							count++;
							//-- 몇번 째 줄인지 1번만 담기위한 조건문
							if (rowCheck) {
								rowTemp += (m+1)+"번째 ";
								rowCheck = false;
							}
						}
					}					
				}
				//-- 총 개수 담기
				totalCount[k] = count;
				//-- 해당하는 줄 담기
				rowArray.add(rowTemp.trim());
				//-- 다음 단어를 위해 rowTemp 초기화
				rowTemp="";
			}
			//-- 최종 출력
			for (int t = 0; t < inputArray.length; t++) {
				if (rowArray.get(t).isEmpty()) {
					System.out.println("총 "+inputArray[t]+" : 0개입니다.");
				}else {
					System.out.println("총 "+inputArray[t]+" : "+totalCount[t]+"개입니다.");
					System.out.println("해당 단어는 "+rowArray.get(t)+"에 있습니다.");
				}
			}
		
	}//-- main END
}


