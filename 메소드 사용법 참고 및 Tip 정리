1. Map 사용법  https://wakestand.tistory.com/112
2. 파일 라인 읽기 https://hianna.tistory.com/600		// strip() 메소드는 trim() 보다 더 많은 종류의 공백을 제거할 수 있습니다.
3. 디버그 관련 https://coding-factory.tistory.com/642	
4. StringTokenizer https://rimkongs.tistory.com/294
5. 접근제어 관련 https://hongong.hanbit.co.kr/%EC%9E%90%EB%B0%94-%EC%A0%91%EA%B7%BC-%EC%A0%9C%ED%95%9C%EC%9E%90%EC%9D%98-%EC%A2%85%EB%A5%98%EC%99%80-%EC%B0%A8%EC%9D%B4public-protected-private/
<cf>
1. trim() 메소드 사용 시 문자열이 없는 경우에 사용하면 빈 개체가 반환된다. 
   이것을 배열에 담으면 빈 문자열이 담긴다. 즉, 인덱스 추가됨
2. 빈 문자열을 배열에 담으면 사이즈는 늘었지만 해당 요소의 길이는 0이기 때문에 isEmpty()는 문자열의 길이가 0인 경우 true를 반환하므로 true 가 리턴된다

3. 자바에서 주로 쓰는 기본 패키지

- java.lang : 자바 프로그래밍을 위한 가장 기본적인 패키지와 클래스를 포함한다.

- java.util : 프로그램을 제어하기 위한 클래스와 데이터를 효율적으로 저장하기 위한 클래스들을 담고 있다.

- java.io : 키보드, 모니터, 프린터, 파일등을 제어할 수 있는 클래스들의 모음.

- java.net : 통신을 위한 기능들을 담고 있다.

4. String[] split(String regex, int limit)
   regex는 쪼개기 위한 기준 , limit은 배열의 크기를 지정해준다.
   ex) 010-1234-5678을 "-"을 기준으로 쪼개면 배열크기가 2개가 될 수 있도록 010 / 1234-5678 (2개로 쪼개진다)

5. 자바 문자열 앞,뒤에 " " 있어서 \" 식으로 입력 해야하는 것 이외에 "" 포함되서 인식 되는 것 같다.
   그래서 "" 값이 있는지 확인하면 있는 것으로 인식되는 것 같다.

6. StringTokenizer 객체에서 더 이상 가져올 토큰이 없다면 nextToken() 메소드는 java.util.NoSuchElementException 예외를 발생시킨다. 
   그래서 nextToken() 메소드를 사용하기 전에 hasMoreTokens() 메소드로 꺼내올 토큰이 있는지 조사한 후 nextToken() 메소드를 호출하는 것이 좋은 코딩

7. comparTo는 같은 위치의 문자만 비교하기 때문에 맨 앞에서 틀렸기 때문에 바로 아스키값으로 비교처리를 한다

8. setter의 경우 변조 가능성이 있기 때문에 생성자로 값을 넣어주도록 하게 하면 전달하는 과정에서 변조가 불가능하다. 

9. VO는 DTO와 반대로 로직을 포함할 수 있으며, VO의 경우 특정 값 자체를 표현하기 때문에 불변성의 보장을 위해 생성자를 사용하여야 한다 / https://maenco.tistory.com/entry/Java-DTO%EC%99%80-VO%EC%9D%98-%EC%B0%A8%EC%9D%B4
   (필드 값이 같다면 두 객체를 같은 객체로 본다)

10. 콜백함수란 어떤 이벤트가 발생했거나 특정 시점에 도달했을 때 시스템에서 호출하는 함수
     비동기적으로 콜백함수를 호출하는 함수와 비동기적으로 호출되기를 원하는 콜백함수가 필요하다.
     js에서 함수는 object라고 한다. 그래서, 함수는 다른 함수의 인자로 쓰일 수도 어떤 함수에 의해 리턴될 수도 있다.
     
11. .on() 메소드
	선택한 요소에 어떤 타입의 이벤트라도 연결할 수 있다.
	하나의 이벤트 핸들러에 여러 개의 이벤트를 동시에 연결할 수 있다.
	선택한 요소에 여러 개의 이벤트 핸들러와 여러 개의 이벤트를 같이 연결할 수 있다.
	사용자 지정 이벤트(custom event)를 위해 이벤트 핸들러로 데이터를 넘길 수 있다.
	차후에 다루게 될 요소를 이벤트에 바인딩할 수 있다.
	기본형

12. javascript & jquery  this관련  https://inpa.tistory.com/entry/jQuery-%F0%9F%93%9A-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-this-%E2%9A%94%EF%B8%8F-%EC%A0%9C%EC%9D%B4%EC%BF%BC%EB%A6%AC-this
	js 에서 this는 id가 예를들어 div 에 걸려있으면 해당 div를 가리키지만
	jquery 에서는  ex) div>button 클릭한 해당 버튼을 가리킨다
	
13. var / let 의 차이는 function-scorped , block-scoped 즉, 범위의 차이다

14. $.each (2가지) /  https://webclub.tistory.com/455 

15. FormData 정리 / https://inpa.tistory.com/entry/JS-%F0%9F%93%9A-FormData-%EC%A0%95%EB%A6%AC-fetch-api

16. summernote input? 사용할 때 textarea 안에 하지말고 div 에 하는게 좋다?

17. 자바스크립트는 null과 undefined 타입을 제외하고 모든 것을 객체로 다룬다.
     함수를 변수 or 다른 함수의 변수처럼 사용할 수 있다.

18. Ajax 비동기통신 사용 시 주의해야할 사항.
	success function과 자바스크립트의 흐름은 서로 다른 흐름을 가지게 되고 return data를 가져온 ajax 객체의 success 콜백함수는 자기대로, 기존 자바스크립트 코드는 자바스크립트 코드대로 각자의 흐름을 가지게 된다는 것을 명심
	 여러가지 ajax 객체의 비동기 통신이 여러번 실행될 경우 먼저 실행된 1번째 비동기통신이 2번 비동기통신의 return 보다 먼저 일어난다고 보장할 수 없다. 왜냐하면 비동기 통신이고 1번째에서 return할 값(만약 db를 거쳐 어떤 레코드셋을 반환한다면)의 크기가 무거워질수록 속도는 느려지기 때문에 2번째 비동기 통신이 훨씬 가볍다면 2번째 return 값이 먼저 반환되어 실행될 가능성도 있다.

19. Uncaught TypeError: is not a function 
	태그 id, name이 자바스크립트 함수 이름과 같으면 발생

20. jquery id, name, class 접근 방법 / https://breakpoint.tistory.com/85

21. where 1=1을 쓰는 이유 1) 주석처리 편리 2)동적쿼리에서 특정상황마다 where 절을 다르게 작성해야 할때 편리하다./ https://hyjykelly.tistory.com/5

22. jsp에서 00021 이런식으로 넘겨도 db에서 형변환 시키면 0 제거해서 들어가진다.
