# 초기 설정 관련 https://mangkyu.tistory.com/10 

# Spring Legacy Project의 기본 구조 / https://parkjye.tistory.com/54
			            https://freestrokes.tistory.com/78?category=1073732

# 구조 개념 및 명명 규칙 https://boyboy94.tistory.com/13

# 404 에러 관련 / https://xzio.tistory.com/1373

# 생성관련 2가지 / https://lcs1245.tistory.com/entry/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-Spring-MVC-%EC%9B%B9-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0

# dispatcher-servlet / https://woopi1087.tistory.com/30?category=839519

# https://addio3305.tistory.com/39?category=772645

# 프로젝트 생성 후 초기 설정 / https://parkjye.tistory.com/59

# h2DB 관련 / https://ojt90902.tistory.com/879
	    / https://maeng-dev.tistory.com/90
*H2 the file is locked -> 1. 파일 위치에서 문서가 락걸렸는지 확인
		       2. 이미 db 사용중이라서 안 열림 -> 재부팅으로 해결됨

# service 흐름 / https://opentogether.tistory.com/91

# root-context.xml == applicationContext.xml

#★ 비교적 상세 설명1 / https://datamoney.tistory.com/161
#★ 비교적 상세 설명2 / https://giyatto.tistory.com/63?category=656328

# @컨트롤러 지정 url-controller 맵핑

# WEB-INF 밑에 있으면 숨겨져 있어서 url로 바로 요청 불가능 하는 것 까먹지 말자

# HandlerMapping 관련 /  https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=todoskr&logNo=220845006916

# try-catch 에서 1개라도 오류있으면 addObject 안되서 view페이지에서 안나온다?

# 스프링 부트 테이블 생성 및 관련 어노테이션 정리 / https://velog.io/@deannn/Spring-Boot-Blog-Project-DB-%ED%85%8C%EC%9D%B4%EB%B8%94-%EB%A7%8C%EB%93%A4%EA%B8%B0

# 접근제어관련 /  https://hongong.hanbit.co.kr/%EC%9E%90%EB%B0%94-%EC%A0%91%EA%B7%BC-%EC%A0%9C%ED%95%9C%EC%9E%90%EC%9D%98-%EC%A2%85%EB%A5%98%EC%99%80-%EC%B0%A8%EC%9D%B4public-protected-private/

# @Resource 어노테이션의 적용 순서

   1. name 속성에 지정한 빈 객체를 찾는다.

   2. name 속성이 없을 경우, 동일한 타입을 갖는 빈 객체를 찾는다.

   3. name 속성이 없고 동일한 타입을 갖는 빈 객체가 두 개 이상일 경우, 같은 이름을 가진 빈 객체를 찾는다.

   4. name 속성이 없고 동일한 타입을 갖는 빈 객체가 두 개 이상이고 같은 이름을 가진 빈 객체가 없는 경우 @Qualifier를 이용해서 주입할 빈 객체를 찾는다.


# 전체적인 처리 과정에서 누락되는 경우를 없애기 위해 정리
0. pom.xml : 필요한 설정하기 및 
1. 클라이언트 요청 : WEB-INF 하위에 있으면 숨겨져 있는 것이기 때문에 URL 등 바로 실행 불가능 
2. web.xml : DispatcherServlet 설정 / 최초 요청 페이지 or url 패턴 정하기 / 필터 정의
3. servlet-context.xml (DispatcherServlet) : DataSource등록 / DAO 등록 및 DataSource 주입 / Controller 등록(요청 url에 필요한 Controller 맵핑) 및 필요한 dao 주입 / 
4. Controller.java : 인터페이스 자료형 dao 구성 및 dao setter 구성 / Controller 인터페이스 메소드 재정의 
                      : ModelAndView 객체 생성 -> 필요한 자료형 생성 및 dao 메소드 실행 -> 해당 값 ModelAndView 객체에 담고 setViewName 지정 -> ModelAndView를 return

5. xx.jsp : 전달 받은 객체 뿌려주기

cf) 값 안넘어오는 경우 
1. result 에 add 안했는지 dao 에서 확인해보기
